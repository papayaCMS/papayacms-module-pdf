<?xml version="1.0" encoding="UTF-8"?>
<project name="papaya Module Package" default="build">

  <property name="directory.src" value="${project.basedir}" override="true"/>
  <property name="directory.document-root" value="${directory.src}/htdocs" override="true"/>

  <property name="mode.writeable" value="0777" override="true"/>

  <property file="dist.build.properties" prefix="configuration" override="true"/>
  <property file="build.properties" prefix="configuration" override="true"/>

  <property name="executable.composer" value="${configuration.executable.composer}" override="true"/>
  <property name="executable.git" value="${configuration.executable.git}" override="true"/>

  <property name="database.uri" value="${configuration.database.uri}" override="true"/>

  <property name="revision.project" value="" override="true"/>

  <target name="build" depends="prepare,dependencies-install,config" description="Install/Configure"/>

  <!--
    Install dependencies-install dependencies
   -->
  <target name="dependencies-install" depends="composer-install,fetch-revisions" description="Install dependencies"/>
  <target name="composer-install" hidden="true">
    <exec executable="${executable.composer}" passthru="true">
      <arg value="-n"/>
      <arg value="install"/>
    </exec>
  </target>

  <!--
    Update dependencies-install dependencies
   -->
  <target name="dependencies-update" depends="composer-update,fetch-revisions" description="Update dependencies"/>
  <target name="composer-update" hidden="true">
    <exec executable="${executable.composer}" passthru="true">
      <arg value="-n"/>
      <arg value="update"/>
    </exec>
  </target>

  <!--
    Configure working copy
   -->
  <target name="config" description="Generate configuration">
    <property name="config.template" value="${directory.src}/dist.papaya.php"/>
    <property name="config.file" value="${directory.src}/papaya.php"/>
    <property name="papaya.database.uri" value="${database.uri}"/>
    <property name="papaya.development.active" value="(bool)TRUE"/>
    <property name="hasConfiguration" value="false"/>
    <available file="${config.file}" property="hasConfiguration" value="true"/>
    <if>
      <isfalse value="${hasConfiguration}"/>
      <then>
        <copy file="${config.template}" tofile="${config.file}">
          <filterchain>
            <expandproperties/>
          </filterchain>
        </copy>
      </then>
      <else>
        <warn message="papaya.php already exists. Skipped."/>
      </else>
    </if>
  </target>

  <target name="config-remove" description="Remove configuration" hidden="true">
    <property name="config.file" value="${directory.src}/papaya.php"/>
    <delete file="${config.file}"/>
  </target>

  <target name="config-regenerate" depends="config-remove,config" description="Regenerate configuration"/>

  <target name="prepare" description="Generate directories" hidden="true">
    <mkdir dir="${directory.src}/papaya-data/cache" mode="${mode.writeable}"/>
    <mkdir dir="${directory.src}/papaya-data/media/files" mode="${mode.writeable}"/>
    <mkdir dir="${directory.src}/papaya-data/media/thumbs" mode="${mode.writeable}"/>
  </target>

  <!--
    Fetch revisions and store them in a PHP file
  -->
  <target name="fetch-revisions" depends="project-revision, papaya-revision" hidden="true">
    <append
      destFile="${directory.document-root}/revisions.inc.php"
      append="false"
      overwrite="true"
      text="&lt;?php&#10;define('PAPAYA_WEBSITE_REVISION', '${revision.project}');&#10;define('PAPAYA_VERSION_STRING', '${revision.papaya}');&#10;"/>
  </target>

  <!--
    Determine the project code revision from Git metadata
   -->
  <target name="project-revision" description="Get project revision from git" hidden="true">
    <property name="revision.project" value="dev" override="true"/>
    <trycatch property="vcs.error">
      <try>
        <property name="isGitRepository" value="false"/>
        <available file=".git" type="dir" property="isGitRepository" value="true"/>
        <if>
          <istrue value="${isGitRepository}"/>
          <then>
            <property name="revision.project" value="dev" override="true"/>
            <exec
              executable="${executable.git}"
              returnProperty="git.return"
              outputProperty="git.output"
              dir="${project.basedir}">
              <arg line="describe --tags"/>
            </exec>
            <if>
              <equals arg1="${git.return}" arg2="0"/>
              <then>
                <property name="revision.project" value="${git.output}" override="true"/>
              </then>
            </if>
            <echo message="Current revision: ${revision.project}"/>
          </then>
          <else>
            <echo message="Project is not a Git repository. No revisions available."/>
          </else>
        </if>
      </try>
      <catch>
        <echo level="warning">There was an error while reading revision information. Current revision is unknown.</echo>
        <echo level="warning">Please make sure that the git executable is available.</echo>
        <echo level="debug">${vcs.error}</echo>
        <property name="revision.project" value="unknown" override="true"/>
      </catch>
    </trycatch>
  </target>

  <target name="papaya-revision" hidden="true">
    <property name="revision.papaya" value=""/>
    <trycatch property="error">
      <try>
        <adhoc-task name="composer-version">
          <![CDATA[
        class PapayaVersionTask extends Task {

          function main() {
            $json = json_decode(file_get_contents("composer.lock"));
            foreach ($json->packages as $package) {
              if ($package->name === 'papaya/cms-core') {
                $this->project->setProperty(
                  'revision.papaya', $package->version.' '.substr($package->source->reference, 0, 8)
                );
              }
            }
          }
        }
        ]]>
        </adhoc-task>
        <composer-version/>
        <echo message="Papaya revision: ${revision.papaya}"/>
      </try>
      <catch>
        <echo level="warning">There was an error while reading papaya core version information.</echo>
        <echo level="debug">${error}</echo>
        <property name="revision.papaya" value="unknown" override="true"/>
      </catch>
    </trycatch>
  </target>

  <target name="run" description="Start the PHP built-in webserver">
    <exec executable="php" passthru="true">
      <arg line="-S localhost:8080 -t ./htdocs server.php"/>
    </exec>
  </target>

</project>
